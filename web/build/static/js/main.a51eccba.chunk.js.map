{"version":3,"sources":["firebase.js","components/TodoFirestore.jsx","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","db","getFirestore","todoCol","collection","TodoFirestore","useState","inputText","setInputText","todo","setTodo","useEffect","q","query","orderBy","unsubscribe","onSnapshot","snapshot","arr","forEach","doc","id","data","unshift","value","edit","e","target","disabled","parentElement","children","innerHTML","innerText","addEventListener","c","a","updateDoc","submit","preventDefault","obj","timestamp","serverTimestamp","addDoc","deleteLi","deleteDoc","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","color","palette","common","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","onSubmit","style","margin","marginTop","marginBottom","TextField","fullWidth","label","variant","tabIndex","type","onChange","Button","onClick","element","TableContainer","component","Paper","Table","TableHead","sx","textAlign","TableBody","map","eachTodo","i","scope","marginLeft","size","App","Box","flexGrow","AppBar","position","Toolbar","Typography","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a51eccba.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCqifGo_f5hwguU7GS8c3qH5TAT1_E1nhA\",\r\n  authDomain: \"todo-react-860c9.firebaseapp.com\",\r\n  projectId: \"todo-react-860c9\",\r\n};\r\ninitializeApp(firebaseConfig);\r\nexport const db = getFirestore();","import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"./../firebase\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  onSnapshot,\r\n  deleteDoc,\r\n  doc,\r\n  query,\r\n  serverTimestamp,\r\n  orderBy,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell, { tableCellClasses } from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst todoCol = collection(db, \"todo\");\r\n\r\nfunction TodoFirestore() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todo, setTodo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // RealTime getting Item and delete\r\n    const q = query(todoCol, orderBy(\"timestamp\"));\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      let arr = [];\r\n      snapshot.forEach((doc) => {\r\n        let id = doc.id;\r\n        let data = doc.data();\r\n        arr.unshift({\r\n          id: id,\r\n          value: data.value,\r\n        });\r\n      });\r\n      setTodo(arr);\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n      // console.log(\"cleanup\");\r\n    };\r\n    // simple getting item\r\n    // const getData = async () => {\r\n    //   const querySnapshot = await getDocs(todoCol);\r\n    //   let arr = [];\r\n    //   querySnapshot.forEach((docs) => {\r\n    //     // console.log(docs.id, \" and \", docs.data());\r\n    //     arr.push(docs.data());\r\n    //   });\r\n    //   setTodo(arr);\r\n    // };\r\n    // getData();\r\n    // return () => {\r\n    //   console.log(\"cleanup\");\r\n    // };\r\n  }, []);\r\n\r\n  // update\r\n  const edit = (e) => {\r\n    e.target.disabled = true;\r\n    e.target.parentElement.children[0].innerHTML = `<input type=\"text\" size=\"28\" style=\" width: auto;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\" value=\"${e.target.parentElement.children[0].innerText}\"/>`;\r\n    e.target.parentElement.children[0].children[0].addEventListener(\r\n      \"blur\",\r\n      async (c) => {\r\n        await updateDoc(doc(todoCol, c.target.parentElement.id), {\r\n          value: `${c.target.value}`,\r\n        });\r\n        e.target.disabled = false;\r\n      }\r\n    );\r\n  };\r\n\r\n  //Submit\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    if (inputText !== \"\") {\r\n      try {\r\n        let obj = {\r\n          value: inputText,\r\n          timestamp: serverTimestamp(),\r\n        };\r\n        await addDoc(todoCol, obj);\r\n        // console.log(\"Document written with ID: \", docRef.id);\r\n      } catch (e) {\r\n        // console.error(\"Error adding document: \", e);\r\n      }\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  const changingOn = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const deleteLi = async (id) => {\r\n    await deleteDoc(doc(todoCol, id));\r\n  };\r\n\r\n  const deleteAll = () => {\r\n    todo.forEach(async (element) => {\r\n      await deleteDoc(doc(todoCol, element.id));\r\n    });\r\n  };\r\n\r\n  const StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n      backgroundColor: \"#953553\",\r\n      color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n      fontSize: 14,\r\n    },\r\n  }));\r\n\r\n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    \"&:last-child td, &:last-child th\": {\r\n      border: 0,\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={submit}\r\n        style={{ margin: \"0px 10px\", marginTop: \"40px\", marginBottom: \"20px\" }}\r\n      >\r\n        <TextField\r\n          fullWidth\r\n          color=\"primary\"\r\n          id=\"outlined-basic\"\r\n          label=\"Type your list Here\"\r\n          variant=\"outlined\"\r\n          tabIndex=\"1\"\r\n          type=\"text\"\r\n          value={inputText}\r\n          onChange={changingOn}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={submit}\r\n          style={{\r\n            margin: \"0px 4px\",\r\n            marginTop: \"9px\",\r\n            backgroundColor: \"#009E60\",\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{\r\n            margin: \"0px 4px\",\r\n            marginTop: \"9px\",\r\n            backgroundColor: \"#811331\",\r\n          }}\r\n          onClick={deleteAll}\r\n        >\r\n          Delete All\r\n        </Button>\r\n      </form>\r\n      <div>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"customized table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell sx={{ textAlign: \"center \" }}>\r\n                  Your Todo List\r\n                </StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {todo.map((eachTodo, i) => (\r\n                <StyledTableRow key={i}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    &#9734;&nbsp;&nbsp;\r\n                    <span id={eachTodo.id}>{eachTodo.value}</span>\r\n                    <Button\r\n                      onClick={edit}\r\n                      variant=\"contained\"\r\n                      style={{\r\n                        margin: \"6px\",\r\n                        marginLeft: \"14px\",\r\n                        backgroundColor: \"#009E60\",\r\n                      }}\r\n                      size=\"small\"\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        deleteLi(eachTodo.id);\r\n                      }}\r\n                      style={{\r\n                        backgroundColor: \"#811331\",\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoFirestore;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport TodoFirestore from \"./components/TodoFirestore\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n// import SimpleTodo from \"./components/Simpletodo\";\n\nfunction App() {\n  return (\n    <>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\" sx={{ backgroundColor: \"#630330\" }}>\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              textAlign=\"center\"\n              component=\"div\"\n              sx={{ flexGrow: 1 }}\n            >\n              <span style={{ cursor: \"pointer\" }}>Advanced Todo App</span>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Box>\n        <TodoFirestore />\n        {/* <SimpleTodo /> */}\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}